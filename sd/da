local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local tweenService = game:GetService("TweenService")
local proximityPromptService = game:GetService("ProximityPromptService")

local autoFarmEnabled = false
local tpCooldown = false
local mmcDevsModel = workspace:FindFirstChild("Map") and workspace.Map:FindFirstChild("NPCs") and workspace.Map.NPCs:FindFirstChild("AMM_Devs")
local spawnBoxes = {}
local debounce = false
local platform
local platformPosition = Vector3.new(500, 500, 500)
local cooldown = 5

local function createPlatform()
    -- Проверяем, если платформы нет, то создаем
    if not platform then
        platform = Instance.new("Part")
        platform.Size = Vector3.new(6, 1, 6)
        platform.Position = platformPosition
        platform.Anchored = true
        platform.CanCollide = true
        platform.BrickColor = BrickColor.new("White")
        platform.Parent = workspace
    end
end

createPlatform()

local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))

local topFrame = Instance.new("Frame", screenGui)
topFrame.Size = UDim2.new(0, 500, 0, 30)
topFrame.Position = UDim2.new(0.1, 0, 0.1, 0)
topFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
topFrame.BorderSizePixel = 0
topFrame.Draggable = true
topFrame.Active = true

local title = Instance.new("TextLabel", topFrame)
title.Size = UDim2.new(1, -35, 0, 30)
title.Position = UDim2.new(-0.15, 0, 0, 0)
title.Text = "Auto Farm Boxes (HS)"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.TextScaled = true

local minimizeButton = Instance.new("TextButton", topFrame)
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -30, 0, 0)
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.BackgroundTransparency = 1

local sliderFrame = Instance.new("Frame", topFrame)
sliderFrame.Size = UDim2.new(1, 0, 0, 150)
sliderFrame.Position = UDim2.new(0, 0, 1, 0)
sliderFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
sliderFrame.BorderSizePixel = 0
sliderFrame.Draggable = true

local toggleFrame = Instance.new("Frame", sliderFrame)
toggleFrame.Size = UDim2.new(0.75, 0, 0.2, 0)
toggleFrame.Position = UDim2.new(0.13, 0, 0.35, 0)
toggleFrame.BackgroundColor3 = Color3.fromRGB(150, 50, 50)
toggleFrame.BorderSizePixel = 0
toggleFrame.ClipsDescendants = true

local toggleButton = Instance.new("Frame", toggleFrame)
toggleButton.Size = UDim2.new(0.4, 0, 1, 0)
toggleButton.Position = UDim2.new(0, 0, 0, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(200, 100, 100)
local buttonCorner = Instance.new("UICorner", toggleButton)
buttonCorner.CornerRadius = UDim.new(1, 0)

local toggleCorner = Instance.new("UICorner", toggleFrame)
toggleCorner.CornerRadius = UDim.new(0, 20)

local cooldownText = Instance.new("TextLabel", sliderFrame)
cooldownText.Size = UDim2.new(1, 0, 0.17, 0)
cooldownText.Position = UDim2.new(0, 0, 0.07, 0)
cooldownText.Text = "Cooldown: 5 seconds"
cooldownText.TextColor3 = Color3.fromRGB(255, 255, 255)
cooldownText.BackgroundTransparency = 1
cooldownText.TextScaled = true

local tpButton = Instance.new("TextButton", sliderFrame)
tpButton.Size = UDim2.new(0.35, 0, 0.25, 0)
tpButton.Position = UDim2.new(0.6, 0, 0.7, 0)
tpButton.Text = "TP"
tpButton.TextColor3 = Color3.fromRGB(255, 255, 255)
tpButton.BackgroundColor3 = Color3.fromRGB(150, 50, 50)
tpButton.BorderSizePixel = 0
tpButton.TextScaled = true

local tpText = Instance.new("TextLabel", sliderFrame)
tpText.Size = UDim2.new(0.55, 0, 0.3, 0)
tpText.Position = UDim2.new(0.02, 0, 0.66, 0)
tpText.Text = "TP to AMM_Devs"
tpText.TextColor3 = Color3.fromRGB(255, 255, 255)
tpText.BackgroundTransparency = 1
tpText.TextScaled = true

-- Переменная для отслеживания состояния сворачивания
local isMinimized = false

minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    -- Анимация изменения размера панели
    local newSize = isMinimized and UDim2.new(1, 0, 0, 0) or UDim2.new(1, 0, 0, 150)
    local tween = tweenService:Create(sliderFrame, TweenInfo.new(0.5), {Size = newSize})
    tween:Play()
end)

local function findSpawnBoxes()
    spawnBoxes = {}
    local spawnPointsFolder = workspace:FindFirstChild("Map"):FindFirstChild("spawnPoints")
    if spawnPointsFolder then
        for _, boxFolder in pairs(spawnPointsFolder:GetChildren()) do
            if boxFolder:IsA("Folder") and boxFolder.Name == "Box" then
                for _, part in pairs(boxFolder:GetChildren()) do
                    if part:IsA("Part") then
                        local boxModel = part:FindFirstChild("Box")
                        if boxModel and boxModel:IsA("Model") then
                            local base = boxModel:FindFirstChild("Base")
                            if base and base:IsA("MeshPart") then
                                table.insert(spawnBoxes, base)
                            end
                        end
                    end
                end
            end
        end
    end
end

local function toggleAutoFarm()
    if debounce then return end
    debounce = true

    autoFarmEnabled = not autoFarmEnabled

    local targetPosition = autoFarmEnabled and UDim2.new(0.6, 0, 0, 0) or UDim2.new(0, 0, 0, 0)
    local tween = tweenService:Create(toggleButton, TweenInfo.new(0.5), {Position = targetPosition})
    tween:Play()

    if autoFarmEnabled then
        task.spawn(function()
            while autoFarmEnabled do
                findSpawnBoxes()
                
                if #spawnBoxes == 0 then
                    humanoidRootPart.CFrame = CFrame.new(platformPosition + Vector3.new(0, 3.5, 0))
                    wait(0.35)
                else
                    for _, base in pairs(spawnBoxes) do
                        if not autoFarmEnabled then break end
                        humanoidRootPart.CFrame = base.CFrame + Vector3.new(0, 2.5, 0)
                        wait(0.4)
                        humanoidRootPart.CFrame = CFrame.new(platformPosition + Vector3.new(0, 3.5, 0))
                        wait(0.4)
                    end
                end
            end
            humanoidRootPart.CFrame = CFrame.new(platformPosition + Vector3.new(0, 3.5, 0))
            debounce = false
        end)
    else
        humanoidRootPart.CFrame = CFrame.new(platformPosition + Vector3.new(0, 3.5, 0))
        wait(cooldown)
        debounce = false
    end

    task.delay(cooldown, function()
        debounce = false
    end)
end

-- Обработка ввода для мобильных и ПК
toggleFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        toggleAutoFarm()
    end
end)

tpButton.MouseButton1Click:Connect(function()
    if tpCooldown then return end
    tpCooldown = true
    task.delay(2.5, function()
        tpCooldown = false
    end)
    
    if mmcDevsModel then
        humanoidRootPart.CFrame = mmcDevsModel.PrimaryPart.CFrame + Vector3.new(0, 2, 0)
    end
end)
